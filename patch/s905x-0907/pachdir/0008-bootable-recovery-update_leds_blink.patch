diff --git a/Android.mk b/Android.mk
index 4c12b5b..3782f1a 100755
--- a/Android.mk
+++ b/Android.mk
@@ -45,6 +45,9 @@ LOCAL_SRC_FILES := \
     misc/adb_sideload.cpp \
     wear_ui.cpp
 
+# add for led blink while update
+LOCAL_C_INCLUDES += vendor/sdmc/sdmc-libs/extra/include
+
 LOCAL_MODULE := recovery
 
 LOCAL_FORCE_STATIC_EXECUTABLE := true
@@ -111,6 +114,9 @@ endif # TARGET_RECOVERY_HAS_PARAM == true
 LOCAL_C_INCLUDES += system/extras/ext4_utils
 LOCAL_C_INCLUDES += external/openssl/include
 
+# add for led blink while update
+LOCAL_STATIC_LIBRARIES += libextra_s
+
 include $(BUILD_EXECUTABLE)
 
 # All the APIs for testing
diff --git a/install.cpp b/install.cpp
index ddfaff0..4c1e45c 100644
--- a/install.cpp
+++ b/install.cpp
@@ -36,6 +36,8 @@
 #include "ui.h"
 #include "misc/misc.h"
 
+#include "extra_recovery.h"	/* add for led blink while update */
+
 extern "C" {
 #include "ubootenv/uboot_env.h"
 }
@@ -283,6 +285,9 @@ install_package(const char* path, bool* wipe_cache, const char* install_file,
     } else {
         LOGE("failed to open last_install: %s\n", strerror(errno));
     }
+
+    led_ctrl_glint_init();	/* add for led blink while udpate */
+
     int result;
     if (setup_install_mounts() != 0) {
         LOGE("failed to set up expected mounts for install; aborting\n");
@@ -299,5 +304,14 @@ install_package(const char* path, bool* wipe_cache, const char* install_file,
         fputc('\n', install_log);
         fclose(install_log);
     }
+
+    /* add for led blink while update, start */
+    if (INSTALL_SUCCESS == result) {
+        led_ctrl_off_init();
+    } else if (INSTALL_NONE != result) {
+        led_ctrl_on_init();
+    }
+    /* add for led blink while update, end */
+
     return result;
 }
diff --git a/recovery.cpp b/recovery.cpp
index 082d21b..eddb8e9 100644
--- a/recovery.cpp
+++ b/recovery.cpp
@@ -54,6 +54,8 @@
 
 #include "misc/misc.h"
 
+#include "extra_recovery.h"	/* add for led blink while update */
+
 extern "C" {
 #include "ubootenv/uboot_env.h"
 }
@@ -1482,6 +1484,8 @@ main(int argc, char **argv) {
 
     printf("Starting recovery (pid %d) on %s", getpid(), ctime(&start));
 
+    led_ctrl_init();	/* add for led blink while update */
+
     load_volume_table();
     get_args(&argc, &argv);
     factory_reset_poweroff_protect(&argc, &argv);
